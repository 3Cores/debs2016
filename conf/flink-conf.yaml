#===============================================================================
# APACHE FLINK 1.0.0 CONFIGURATION FILE
#
# ACM DEBS 2016 PROJECT
#
# Team ThreeCores
#===============================================================================

#==============================================================================
# JVM
#==============================================================================

#env.java.opts: "-Xms3072m -Xmx3072m"

#==============================================================================
# JobManager & TaskManager
#==============================================================================

jobmanager.rpc.address: localhost

jobmanager.rpc.port: 6123

jobmanager.heap.mb: 1024

taskmanager.heap.mb: 5020

taskmanager.numberOfTaskSlots: 6

parallelism.default: 1

taskmanager.memory.size: -1

taskmanager.memory.fraction: 0.7

taskmanager.memory.off-heap: false #if set to true, off-heap memory needs to be larger in JVM

taskmanager.memory.segment-size: 32768

taskmanager.memory.preallocate: false

#==============================================================================
# Other
#==============================================================================

fs.overwrite-files: true

fs.output.always-create-directory: false

taskmanager.network.numberOfBuffers: 2048

#==============================================================================
# JobManager Web Frontend
#==============================================================================

jobmanager.web.port: 8081

jobmanager.web.history: 10

jobmanager.web.submit.enable: false

#==============================================================================
# Streaming state checkpointing
#==============================================================================

# The backend that will be used to store operator state checkpoints if
# checkpointing is enabled.
#
# Supported backends: jobmanager, filesystem, <class-name-of-factory>
#
#state.backend: filesystem


# Directory for storing checkpoints in a Flink-supported filesystem
# Note: State backend must be accessible from the JobManager and all TaskManagers.
# Use "hdfs://" for HDFS setups, "file://" for UNIX/POSIX-compliant file systems,
# (or any local file system under Windows), or "S3://" for S3 file system.
#
# state.backend.fs.checkpointdir: hdfs://namenode-host:port/flink-checkpoints


#==============================================================================
# Advanced
#==============================================================================

# The number of buffers for the network stack.
#
# taskmanager.network.numberOfBuffers: 2048


# Directories for temporary files.
#
# Add a delimited list for multiple directories, using the system directory
# delimiter (colon ':' on unix) or a comma, e.g.:
#     /data1/tmp:/data2/tmp:/data3/tmp
#
# Note: Each directory entry is read from and written to by a different I/O
# thread. You can include the same directory multiple times in order to create
# multiple I/O threads against that directory. This is for example relevant for
# high-throughput RAIDs.
#
# If not specified, the system-specific Java temporary directory (java.io.tmpdir
# property) is taken.
#
# taskmanager.tmp.dirs: /tmp


# Path to the Hadoop configuration directory.
#
# This configuration is used when writing into HDFS. Unless specified otherwise,
# HDFS file creation will use HDFS default settings with respect to block-size,
# replication factor, etc.
#
# You can also directly specify the paths to hdfs-default.xml and hdfs-site.xml
# via keys 'fs.hdfs.hdfsdefault' and 'fs.hdfs.hdfssite'.
#
# fs.hdfs.hadoopconf: /path/to/hadoop/conf/

#==============================================================================
# Master High Availability (required configuration)
#==============================================================================

# The list of ZooKepper quorum peers that coordinate the high-availability
# setup. This must be a list of the form:
# "host1:clientPort,host2[:clientPort],..." (default clientPort: 2181)
#
# recovery.mode: zookeeper
#
# recovery.zookeeper.quorum: localhost:2181,...
#
# Note: You need to set the state backend to 'filesystem' and the checkpoint
# directory (see above) before configuring the storageDir.
#
# recovery.zookeeper.storageDir: hdfs:///recovery